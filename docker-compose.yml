version: "3.2"
services:
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - backend_test_net

  app-publisher:
    image: node:18-alpine
    container_name: "app-publisher"
    working_dir: /app
    ports:
      - "3333:3333"
    volumes:
      - ./publisher:/app
    command: npm run start:dev

    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: admin
      RABBITMQ_PASSWORD: admin
    networks:
      backend_test_net:
        aliases:
          - "backend_test_net"

  app-consumer:
    image: node:18-alpine
    container_name: "app-consumer"
    working_dir: /app
    ports:
      - "3334:3334"
    volumes:
      - ./consumer:/app
    command: npm run start:dev

    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: admin
      RABBITMQ_PASSWORD: admin
      AWS_REGION:
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
    networks:
      backend_test_net:
        aliases:
          - "backend_test_net"

networks:
  backend_test_net:
    name: backend_test_net
    driver: bridge

volumes:
  rabbitmq_data:
